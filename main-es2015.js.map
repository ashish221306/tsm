{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/new-list/new-list.component.ts","./src/app/pages/new-list/new-list.component.html","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/app/pages/task-view/task-view.component.ts","./src/app/pages/task-view/task-view.component.html","./src/app/task.service.ts","./src/app/web.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'lists',pathMatch:'full'},\n  {path:'lists',component:TaskViewComponent},\n  {path:'lists/:listId',component:TaskViewComponent},\n  {path:'new-list',component:NewListComponent},\n  {path:'lists/:listId/new-task',component:NewTaskComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Task Manager';\n}\n","<h1 class=\"text-center info\">task manager</h1>\n<div class=\"container-fluid\">\n    \n            \n            <hr>\n             <router-outlet></router-outlet>\n       \n</div>\n<footer>\n    <p>copyright &copy;2020<br>Task Manager | ashishtech</p>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\nimport {TaskService} from './task.service';\nimport { NewListComponent } from './pages/new-list/new-list.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskViewComponent,\n    NewListComponent,\n    NewTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { Router } from '@angular/router';\nimport List from 'src/app/models/list';\n\n@Component({\n  selector: 'app-new-list',\n  templateUrl: './new-list.component.html',\n  styleUrls: ['./new-list.component.scss']\n})\nexport class NewListComponent implements OnInit {\n\n  constructor(private taskService: TaskService,private router:Router) { }\n  ngOnInit(): void {}\n  addList(value:string){\n    if(!value ){\n      alert('please write your list title');\n      return;\n    } else if(value.length<3){\n      alert('title should be atleat of 3 letters ');\n      return;\n    }\n  this.taskService.createList(value).subscribe((list:List)=>this.router.navigate(['/lists',list._id]));\n}\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box form-group\">\n        <h1 class=\"title\">Create a New List</h1>\n       \n        <input #listInput type='text' class=\"form-control has-background-light\" placeholder=\"ENter list name\">\n        <button class=\"btn btn-primary\" routerLink='/'>Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addList(listInput.value)\">Add</button>\n    \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from 'src/app/task.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport Task from 'src/app/models/task';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent implements OnInit {\n listId:string;\n\n  constructor(private taskService:TaskService,private router:Router,private route:ActivatedRoute) {\n    this.route.params.subscribe((params:Params)=>this.listId=params.listId);\n   }\n\n  ngOnInit(): void {}\n  addTask(value:string){\n    if(!value ){\n      alert('please write your task title');\n      return;\n    } else if(value.length<3){\n      alert('title should be atleat of 3 letters ');\n      return;\n    }\n    \n  this.taskService.createTask(this.listId,value).subscribe((task:Task)=>{this.router.navigate(['../'],{relativeTo:this.route});console.log(task)})\n\n}\n}\n","<div class=\"centered-content\">\n    \n    <div class=\"modal-box form-group\">\n        <h3 class=\"title\">Create a New Task</h3>\n       \n        <input #taskInput type='text' class=\"form-control has-background-light\" placeholder=\"ENter list name\" required>\n        <button class=\"btn btn-primary\" routerLink='../'>Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addTask(taskInput.value)\">Add</button>\n    \n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport List from 'src/app/models/list';\nimport Task from 'src/app/models/task';\nimport {TaskService} from 'src/app/task.service';\nimport {ActivatedRoute, Router,Params } from '@angular/router';\nimport { __classPrivateFieldGet } from 'tslib';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\nlists:List[]=[];\ntasks:Task[]=[];\nlistId:string;\ntaskLength:boolean;\n\n  constructor(private taskService:TaskService,\n    private route:ActivatedRoute,\n    private router:Router) { }\n\n\n  ngOnInit() {\n  this.taskService.getLists().subscribe((lists:List[])=>this.lists=lists);\n  \n  this.route.params.subscribe((params:Params)=>{\n    this.listId=params.listId;\n    console.log(this.listId)\n    if(!this.listId) return;\n    this.taskService.getTasks(this.listId).subscribe((tasks:Task[])=>{\n     this.tasks=tasks;\n     //for no task in the list\n     if(tasks.length==0){\n       this.taskLength=false\n     }else{\n       this.taskLength=true\n     }\n     //\n     console.log('this is tasks:'+this.tasks)\n    })\n  })\n}\n \n onTaskClick(task){\n   this.taskService.setCompleted(this.listId,task).subscribe(()=>task.completed=!task.completed);\n   console.log(this.listId)\n }\n\n\ndeleteTask(task:Task){\n  console.log(task)\n this.taskService.deleteTask(this.listId,task._id).subscribe((task:Task)=>this.tasks=this.tasks.filter(t=>t._id != task._id));\n}\n\ndeleteList(list:List){\n  this.taskService.deleteList(list._id).subscribe(()=>this.lists=this.lists.filter(l=>l._id != list._id));\n}\n\naddTaskClick(){\n  \nif(!this.listId){\n  alert('Please Select a List to Add Task');\n  console.log(this.listId)\n  return;\n  \n}\n\nthis.router.navigate(['./new-task'],{relativeTo:this.route})\n\n\n}\n\n\n\n\n\n\n}\n","\n\n<div class=\"centered-content pd\">\n    <div class=\"task-manager-container\">\n        <div class=\"sidebar\">\n            <h1 class=\"title has-text-primary\">Lists </h1>\n            \n            <div class=\"list-menu\">\n                <a  class=\"list-menu-item\" *ngFor='let list of lists' [routerLink]=\"['/lists',list._id]\" routerLinkActive='is-active'>\n                    <p class=\"white-text\">{{list.title}}\n                        <span title=\"delete\" class=\" btn-danger pull-right task-delete btn-rounded-corner\" (click)='deleteList(list)' >X</span></p>\n                </a>\n                \n               \n            </div>\n            <button class=\"listbtn btn btn-primary btn-rounded-corner\" routerLink=\"/new-list\">Add List</button>\n        </div>\n        \n        <div class=\"task-list-container\">\n            <h1 class=\"title has-text-primary\" >\n                Tasks\n            </h1>\n            \n                <b style=\"color: #f1f1f1;\" *ngIf='!taskLength'>No task in this list</b>\n            \n            <div class=\"taskview\">\n                <div class=\"task\" [class.complete]='task.completed' *ngFor='let task of tasks' (click)='onTaskClick(task)'>\n                \n                    <p class=\"white-text\">\n                        {{task.title}}\n                        <span title=\"delete\" class=\"btn-danger pull-right task-delete btn-rounded-corner\" (click)='deleteTask(task)'>X</span>\n                    </p>\n                </div>\n            </div>\n            <button class=\"btn btn-primary add-button\" (click)=\"addTaskClick()\">\n                Add task\n            </button>\n        </div>\n\n        \n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {WebService} from './web.service';\nimport Task from './models/task'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private webService:WebService) { }\n\n  getLists() {\n    return this.webService.get('lists');\n  }\n  createList(title:string){\n    return this.webService.post('lists',{title})\n  }\n\n\n  getTasks(listId:string) {\n    return this.webService.get(`lists/${listId}/tasks`);\n  }\n  createTask(listId:string,title:string){\n    return this.webService.post(`lists/${listId}/tasks`,{title})\n  }\n\ndeleteList(listId:string){\n  return this.webService.delete(`lists/${listId}`)\n}\n\ndeleteTask(listId:string,taskId:string){\n  return this.webService.delete(`lists/${listId}/tasks/${taskId}`)\n}\n\nsetCompleted(listId:string,task:Task){\n  return this.webService.patch(`lists/${listId}/tasks/${task._id}`,{completed:!task.completed})\n}\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebService {\nreadonly ROOT_URL\n  constructor(private http:HttpClient ) { \n    this.ROOT_URL='http://localhost:3000';\n  }\n\n  get(uri:string){\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  post(uri:string,payload:Object){\n    return this.http.post(`${this.ROOT_URL}/${uri}`,payload);\n  }\n\n  patch(uri:string,payload:Object){\n    return this.http.patch(`${this.ROOT_URL}/${uri}`,payload);\n  }\n\n  delete(uri:string){\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}